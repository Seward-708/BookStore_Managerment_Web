#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookStore_Managerment_Web.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BookStore_Web")]
	public partial class BookStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuthor(Author instance);
    partial void UpdateAuthor(Author instance);
    partial void DeleteAuthor(Author instance);
    partial void InsertBook_Writter(Book_Writter instance);
    partial void UpdateBook_Writter(Book_Writter instance);
    partial void DeleteBook_Writter(Book_Writter instance);
    partial void InsertCart(Cart instance);
    partial void UpdateCart(Cart instance);
    partial void DeleteCart(Cart instance);
    partial void InsertCart_Detail(Cart_Detail instance);
    partial void UpdateCart_Detail(Cart_Detail instance);
    partial void DeleteCart_Detail(Cart_Detail instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProvider(Provider instance);
    partial void UpdateProvider(Provider instance);
    partial void DeleteProvider(Provider instance);
    partial void InsertPublisher(Publisher instance);
    partial void UpdatePublisher(Publisher instance);
    partial void DeletePublisher(Publisher instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public BookStoreDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BookStore_WebConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BookStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Author> Authors
		{
			get
			{
				return this.GetTable<Author>();
			}
		}
		
		public System.Data.Linq.Table<Book_Writter> Book_Writters
		{
			get
			{
				return this.GetTable<Book_Writter>();
			}
		}
		
		public System.Data.Linq.Table<Cart> Carts
		{
			get
			{
				return this.GetTable<Cart>();
			}
		}
		
		public System.Data.Linq.Table<Cart_Detail> Cart_Details
		{
			get
			{
				return this.GetTable<Cart_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Provider> Providers
		{
			get
			{
				return this.GetTable<Provider>();
			}
		}
		
		public System.Data.Linq.Table<Publisher> Publishers
		{
			get
			{
				return this.GetTable<Publisher>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Author")]
	public partial class Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Author_ID;
		
		private string _Author_Name;
		
		private System.Nullable<bool> _Author_State;
		
		private EntitySet<Book_Writter> _Book_Writters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthor_IDChanging(int value);
    partial void OnAuthor_IDChanged();
    partial void OnAuthor_NameChanging(string value);
    partial void OnAuthor_NameChanged();
    partial void OnAuthor_StateChanging(System.Nullable<bool> value);
    partial void OnAuthor_StateChanged();
    #endregion
		
		public Author()
		{
			this._Book_Writters = new EntitySet<Book_Writter>(new Action<Book_Writter>(this.attach_Book_Writters), new Action<Book_Writter>(this.detach_Book_Writters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Author_ID
		{
			get
			{
				return this._Author_ID;
			}
			set
			{
				if ((this._Author_ID != value))
				{
					this.OnAuthor_IDChanging(value);
					this.SendPropertyChanging();
					this._Author_ID = value;
					this.SendPropertyChanged("Author_ID");
					this.OnAuthor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author_Name", DbType="NVarChar(50)")]
		public string Author_Name
		{
			get
			{
				return this._Author_Name;
			}
			set
			{
				if ((this._Author_Name != value))
				{
					this.OnAuthor_NameChanging(value);
					this.SendPropertyChanging();
					this._Author_Name = value;
					this.SendPropertyChanged("Author_Name");
					this.OnAuthor_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author_State", DbType="Bit")]
		public System.Nullable<bool> Author_State
		{
			get
			{
				return this._Author_State;
			}
			set
			{
				if ((this._Author_State != value))
				{
					this.OnAuthor_StateChanging(value);
					this.SendPropertyChanging();
					this._Author_State = value;
					this.SendPropertyChanged("Author_State");
					this.OnAuthor_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_Book_Writter", Storage="_Book_Writters", ThisKey="Author_ID", OtherKey="Author_ID")]
		public EntitySet<Book_Writter> Book_Writters
		{
			get
			{
				return this._Book_Writters;
			}
			set
			{
				this._Book_Writters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Book_Writters(Book_Writter entity)
		{
			this.SendPropertyChanging();
			entity.Author = this;
		}
		
		private void detach_Book_Writters(Book_Writter entity)
		{
			this.SendPropertyChanging();
			entity.Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book_Writter")]
	public partial class Book_Writter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Author_ID;
		
		private int _Product_ID;
		
		private string _Year_Reprint;
		
		private EntityRef<Author> _Author;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthor_IDChanging(int value);
    partial void OnAuthor_IDChanged();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnYear_ReprintChanging(string value);
    partial void OnYear_ReprintChanged();
    #endregion
		
		public Book_Writter()
		{
			this._Author = default(EntityRef<Author>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Author_ID
		{
			get
			{
				return this._Author_ID;
			}
			set
			{
				if ((this._Author_ID != value))
				{
					if (this._Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthor_IDChanging(value);
					this.SendPropertyChanging();
					this._Author_ID = value;
					this.SendPropertyChanged("Author_ID");
					this.OnAuthor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year_Reprint", DbType="NVarChar(10)")]
		public string Year_Reprint
		{
			get
			{
				return this._Year_Reprint;
			}
			set
			{
				if ((this._Year_Reprint != value))
				{
					this.OnYear_ReprintChanging(value);
					this.SendPropertyChanging();
					this._Year_Reprint = value;
					this.SendPropertyChanged("Year_Reprint");
					this.OnYear_ReprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_Book_Writter", Storage="_Author", ThisKey="Author_ID", OtherKey="Author_ID", IsForeignKey=true)]
		public Author Author
		{
			get
			{
				return this._Author.Entity;
			}
			set
			{
				Author previousValue = this._Author.Entity;
				if (((previousValue != value) 
							|| (this._Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Author.Entity = null;
						previousValue.Book_Writters.Remove(this);
					}
					this._Author.Entity = value;
					if ((value != null))
					{
						value.Book_Writters.Add(this);
						this._Author_ID = value.Author_ID;
					}
					else
					{
						this._Author_ID = default(int);
					}
					this.SendPropertyChanged("Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Book_Writter", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Book_Writters.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Book_Writters.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cart")]
	public partial class Cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cart_ID;
		
		private System.Nullable<System.DateTime> _Cart_DateCreate;
		
		private System.Nullable<bool> _Cart_State;
		
		private System.Nullable<System.DateTime> _Cart_Deliveryday;
		
		private string _Cart_Address;
		
		private System.Nullable<int> _Users_ID;
		
		private EntitySet<Cart_Detail> _Cart_Details;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCart_IDChanging(int value);
    partial void OnCart_IDChanged();
    partial void OnCart_DateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnCart_DateCreateChanged();
    partial void OnCart_StateChanging(System.Nullable<bool> value);
    partial void OnCart_StateChanged();
    partial void OnCart_DeliverydayChanging(System.Nullable<System.DateTime> value);
    partial void OnCart_DeliverydayChanged();
    partial void OnCart_AddressChanging(string value);
    partial void OnCart_AddressChanged();
    partial void OnUsers_IDChanging(System.Nullable<int> value);
    partial void OnUsers_IDChanged();
    #endregion
		
		public Cart()
		{
			this._Cart_Details = new EntitySet<Cart_Detail>(new Action<Cart_Detail>(this.attach_Cart_Details), new Action<Cart_Detail>(this.detach_Cart_Details));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cart_ID
		{
			get
			{
				return this._Cart_ID;
			}
			set
			{
				if ((this._Cart_ID != value))
				{
					this.OnCart_IDChanging(value);
					this.SendPropertyChanging();
					this._Cart_ID = value;
					this.SendPropertyChanged("Cart_ID");
					this.OnCart_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Cart_DateCreate
		{
			get
			{
				return this._Cart_DateCreate;
			}
			set
			{
				if ((this._Cart_DateCreate != value))
				{
					this.OnCart_DateCreateChanging(value);
					this.SendPropertyChanging();
					this._Cart_DateCreate = value;
					this.SendPropertyChanged("Cart_DateCreate");
					this.OnCart_DateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_State", DbType="Bit")]
		public System.Nullable<bool> Cart_State
		{
			get
			{
				return this._Cart_State;
			}
			set
			{
				if ((this._Cart_State != value))
				{
					this.OnCart_StateChanging(value);
					this.SendPropertyChanging();
					this._Cart_State = value;
					this.SendPropertyChanged("Cart_State");
					this.OnCart_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_Deliveryday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Cart_Deliveryday
		{
			get
			{
				return this._Cart_Deliveryday;
			}
			set
			{
				if ((this._Cart_Deliveryday != value))
				{
					this.OnCart_DeliverydayChanging(value);
					this.SendPropertyChanging();
					this._Cart_Deliveryday = value;
					this.SendPropertyChanged("Cart_Deliveryday");
					this.OnCart_DeliverydayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_Address", DbType="NVarChar(100)")]
		public string Cart_Address
		{
			get
			{
				return this._Cart_Address;
			}
			set
			{
				if ((this._Cart_Address != value))
				{
					this.OnCart_AddressChanging(value);
					this.SendPropertyChanging();
					this._Cart_Address = value;
					this.SendPropertyChanged("Cart_Address");
					this.OnCart_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users_ID", DbType="Int")]
		public System.Nullable<int> Users_ID
		{
			get
			{
				return this._Users_ID;
			}
			set
			{
				if ((this._Users_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsers_IDChanging(value);
					this.SendPropertyChanging();
					this._Users_ID = value;
					this.SendPropertyChanged("Users_ID");
					this.OnUsers_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cart_Cart_Detail", Storage="_Cart_Details", ThisKey="Cart_ID", OtherKey="Cart_ID")]
		public EntitySet<Cart_Detail> Cart_Details
		{
			get
			{
				return this._Cart_Details;
			}
			set
			{
				this._Cart_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Cart", Storage="_User", ThisKey="Users_ID", OtherKey="Users_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._Users_ID = value.Users_ID;
					}
					else
					{
						this._Users_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cart_Details(Cart_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Cart = this;
		}
		
		private void detach_Cart_Details(Cart_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Cart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cart_Detail")]
	public partial class Cart_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<double> _Cart_Detail_Price;
		
		private System.Nullable<int> _Cart_Detail_Quantity;
		
		private int _Cart_ID;
		
		private int _Product_ID;
		
		private EntityRef<Cart> _Cart;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCart_Detail_PriceChanging(System.Nullable<double> value);
    partial void OnCart_Detail_PriceChanged();
    partial void OnCart_Detail_QuantityChanging(System.Nullable<int> value);
    partial void OnCart_Detail_QuantityChanged();
    partial void OnCart_IDChanging(int value);
    partial void OnCart_IDChanged();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    #endregion
		
		public Cart_Detail()
		{
			this._Cart = default(EntityRef<Cart>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_Detail_Price", DbType="Float")]
		public System.Nullable<double> Cart_Detail_Price
		{
			get
			{
				return this._Cart_Detail_Price;
			}
			set
			{
				if ((this._Cart_Detail_Price != value))
				{
					this.OnCart_Detail_PriceChanging(value);
					this.SendPropertyChanging();
					this._Cart_Detail_Price = value;
					this.SendPropertyChanged("Cart_Detail_Price");
					this.OnCart_Detail_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_Detail_Quantity", DbType="Int")]
		public System.Nullable<int> Cart_Detail_Quantity
		{
			get
			{
				return this._Cart_Detail_Quantity;
			}
			set
			{
				if ((this._Cart_Detail_Quantity != value))
				{
					this.OnCart_Detail_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Cart_Detail_Quantity = value;
					this.SendPropertyChanged("Cart_Detail_Quantity");
					this.OnCart_Detail_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cart_ID
		{
			get
			{
				return this._Cart_ID;
			}
			set
			{
				if ((this._Cart_ID != value))
				{
					if (this._Cart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCart_IDChanging(value);
					this.SendPropertyChanging();
					this._Cart_ID = value;
					this.SendPropertyChanged("Cart_ID");
					this.OnCart_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cart_Cart_Detail", Storage="_Cart", ThisKey="Cart_ID", OtherKey="Cart_ID", IsForeignKey=true)]
		public Cart Cart
		{
			get
			{
				return this._Cart.Entity;
			}
			set
			{
				Cart previousValue = this._Cart.Entity;
				if (((previousValue != value) 
							|| (this._Cart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cart.Entity = null;
						previousValue.Cart_Details.Remove(this);
					}
					this._Cart.Entity = value;
					if ((value != null))
					{
						value.Cart_Details.Add(this);
						this._Cart_ID = value.Cart_ID;
					}
					else
					{
						this._Cart_ID = default(int);
					}
					this.SendPropertyChanged("Cart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Cart_Detail", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Cart_Details.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Cart_Details.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Category_ID;
		
		private string _Category_Name;
		
		private System.Nullable<bool> _Category_State;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategory_IDChanging(int value);
    partial void OnCategory_IDChanged();
    partial void OnCategory_NameChanging(string value);
    partial void OnCategory_NameChanged();
    partial void OnCategory_StateChanging(System.Nullable<bool> value);
    partial void OnCategory_StateChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Name", DbType="NVarChar(50)")]
		public string Category_Name
		{
			get
			{
				return this._Category_Name;
			}
			set
			{
				if ((this._Category_Name != value))
				{
					this.OnCategory_NameChanging(value);
					this.SendPropertyChanging();
					this._Category_Name = value;
					this.SendPropertyChanged("Category_Name");
					this.OnCategory_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_State", DbType="Bit")]
		public System.Nullable<bool> Category_State
		{
			get
			{
				return this._Category_State;
			}
			set
			{
				if ((this._Category_State != value))
				{
					this.OnCategory_StateChanging(value);
					this.SendPropertyChanging();
					this._Category_State = value;
					this.SendPropertyChanged("Category_State");
					this.OnCategory_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="Category_ID", OtherKey="Category_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Comment_Infor;
		
		private System.Nullable<System.DateTime> _Comment_DateCreate;
		
		private int _Users_ID;
		
		private int _Product_ID;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComment_InforChanging(string value);
    partial void OnComment_InforChanged();
    partial void OnComment_DateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnComment_DateCreateChanged();
    partial void OnUsers_IDChanging(int value);
    partial void OnUsers_IDChanged();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    #endregion
		
		public Comment()
		{
			this._Product = default(EntityRef<Product>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment_Infor", DbType="NVarChar(500)")]
		public string Comment_Infor
		{
			get
			{
				return this._Comment_Infor;
			}
			set
			{
				if ((this._Comment_Infor != value))
				{
					this.OnComment_InforChanging(value);
					this.SendPropertyChanging();
					this._Comment_Infor = value;
					this.SendPropertyChanged("Comment_Infor");
					this.OnComment_InforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Comment_DateCreate
		{
			get
			{
				return this._Comment_DateCreate;
			}
			set
			{
				if ((this._Comment_DateCreate != value))
				{
					this.OnComment_DateCreateChanging(value);
					this.SendPropertyChanging();
					this._Comment_DateCreate = value;
					this.SendPropertyChanged("Comment_DateCreate");
					this.OnComment_DateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Users_ID
		{
			get
			{
				return this._Users_ID;
			}
			set
			{
				if ((this._Users_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsers_IDChanging(value);
					this.SendPropertyChanging();
					this._Users_ID = value;
					this.SendPropertyChanged("Users_ID");
					this.OnUsers_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Comment", Storage="_Product", ThisKey="Product_ID", OtherKey="Product_ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._Product_ID = value.Product_ID;
					}
					else
					{
						this._Product_ID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="Users_ID", OtherKey="Users_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._Users_ID = value.Users_ID;
					}
					else
					{
						this._Users_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_ID;
		
		private string _Product_Name;
		
		private System.Nullable<double> _Product_SellPrice;
		
		private System.Nullable<int> _Product_Quantity;
		
		private string _Product_Image;
		
		private System.Nullable<bool> _Product_isBook;
		
		private System.Nullable<bool> _Product_State;
		
		private System.Nullable<int> _Product_Weight;
		
		private string _Product_Infor;
		
		private System.Nullable<int> _Category_ID;
		
		private System.Nullable<int> _Unit_ID;
		
		private System.Nullable<int> _Providers_ID;
		
		private System.Nullable<int> _Publisher_ID;
		
		private EntitySet<Book_Writter> _Book_Writters;
		
		private EntitySet<Cart_Detail> _Cart_Details;
		
		private EntitySet<Comment> _Comments;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Provider> _Provider;
		
		private EntityRef<Publisher> _Publisher;
		
		private EntityRef<Unit> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnProduct_NameChanging(string value);
    partial void OnProduct_NameChanged();
    partial void OnProduct_SellPriceChanging(System.Nullable<double> value);
    partial void OnProduct_SellPriceChanged();
    partial void OnProduct_QuantityChanging(System.Nullable<int> value);
    partial void OnProduct_QuantityChanged();
    partial void OnProduct_ImageChanging(string value);
    partial void OnProduct_ImageChanged();
    partial void OnProduct_isBookChanging(System.Nullable<bool> value);
    partial void OnProduct_isBookChanged();
    partial void OnProduct_StateChanging(System.Nullable<bool> value);
    partial void OnProduct_StateChanged();
    partial void OnProduct_WeightChanging(System.Nullable<int> value);
    partial void OnProduct_WeightChanged();
    partial void OnProduct_InforChanging(string value);
    partial void OnProduct_InforChanged();
    partial void OnCategory_IDChanging(System.Nullable<int> value);
    partial void OnCategory_IDChanged();
    partial void OnUnit_IDChanging(System.Nullable<int> value);
    partial void OnUnit_IDChanged();
    partial void OnProviders_IDChanging(System.Nullable<int> value);
    partial void OnProviders_IDChanged();
    partial void OnPublisher_IDChanging(System.Nullable<int> value);
    partial void OnPublisher_IDChanged();
    #endregion
		
		public Product()
		{
			this._Book_Writters = new EntitySet<Book_Writter>(new Action<Book_Writter>(this.attach_Book_Writters), new Action<Book_Writter>(this.detach_Book_Writters));
			this._Cart_Details = new EntitySet<Cart_Detail>(new Action<Cart_Detail>(this.attach_Cart_Details), new Action<Cart_Detail>(this.detach_Cart_Details));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Category = default(EntityRef<Category>);
			this._Provider = default(EntityRef<Provider>);
			this._Publisher = default(EntityRef<Publisher>);
			this._Unit = default(EntityRef<Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Name", DbType="NVarChar(50)")]
		public string Product_Name
		{
			get
			{
				return this._Product_Name;
			}
			set
			{
				if ((this._Product_Name != value))
				{
					this.OnProduct_NameChanging(value);
					this.SendPropertyChanging();
					this._Product_Name = value;
					this.SendPropertyChanged("Product_Name");
					this.OnProduct_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_SellPrice", DbType="Float")]
		public System.Nullable<double> Product_SellPrice
		{
			get
			{
				return this._Product_SellPrice;
			}
			set
			{
				if ((this._Product_SellPrice != value))
				{
					this.OnProduct_SellPriceChanging(value);
					this.SendPropertyChanging();
					this._Product_SellPrice = value;
					this.SendPropertyChanged("Product_SellPrice");
					this.OnProduct_SellPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Quantity", DbType="Int")]
		public System.Nullable<int> Product_Quantity
		{
			get
			{
				return this._Product_Quantity;
			}
			set
			{
				if ((this._Product_Quantity != value))
				{
					this.OnProduct_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Product_Quantity = value;
					this.SendPropertyChanged("Product_Quantity");
					this.OnProduct_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Image", DbType="NVarChar(100)")]
		public string Product_Image
		{
			get
			{
				return this._Product_Image;
			}
			set
			{
				if ((this._Product_Image != value))
				{
					this.OnProduct_ImageChanging(value);
					this.SendPropertyChanging();
					this._Product_Image = value;
					this.SendPropertyChanged("Product_Image");
					this.OnProduct_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_isBook", DbType="Bit")]
		public System.Nullable<bool> Product_isBook
		{
			get
			{
				return this._Product_isBook;
			}
			set
			{
				if ((this._Product_isBook != value))
				{
					this.OnProduct_isBookChanging(value);
					this.SendPropertyChanging();
					this._Product_isBook = value;
					this.SendPropertyChanged("Product_isBook");
					this.OnProduct_isBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_State", DbType="Bit")]
		public System.Nullable<bool> Product_State
		{
			get
			{
				return this._Product_State;
			}
			set
			{
				if ((this._Product_State != value))
				{
					this.OnProduct_StateChanging(value);
					this.SendPropertyChanging();
					this._Product_State = value;
					this.SendPropertyChanged("Product_State");
					this.OnProduct_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Weight", DbType="Int")]
		public System.Nullable<int> Product_Weight
		{
			get
			{
				return this._Product_Weight;
			}
			set
			{
				if ((this._Product_Weight != value))
				{
					this.OnProduct_WeightChanging(value);
					this.SendPropertyChanging();
					this._Product_Weight = value;
					this.SendPropertyChanged("Product_Weight");
					this.OnProduct_WeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Infor", DbType="NVarChar(2000)")]
		public string Product_Infor
		{
			get
			{
				return this._Product_Infor;
			}
			set
			{
				if ((this._Product_Infor != value))
				{
					this.OnProduct_InforChanging(value);
					this.SendPropertyChanging();
					this._Product_Infor = value;
					this.SendPropertyChanged("Product_Infor");
					this.OnProduct_InforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int")]
		public System.Nullable<int> Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_ID", DbType="Int")]
		public System.Nullable<int> Unit_ID
		{
			get
			{
				return this._Unit_ID;
			}
			set
			{
				if ((this._Unit_ID != value))
				{
					if (this._Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnit_IDChanging(value);
					this.SendPropertyChanging();
					this._Unit_ID = value;
					this.SendPropertyChanged("Unit_ID");
					this.OnUnit_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Providers_ID", DbType="Int")]
		public System.Nullable<int> Providers_ID
		{
			get
			{
				return this._Providers_ID;
			}
			set
			{
				if ((this._Providers_ID != value))
				{
					if (this._Provider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviders_IDChanging(value);
					this.SendPropertyChanging();
					this._Providers_ID = value;
					this.SendPropertyChanged("Providers_ID");
					this.OnProviders_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher_ID", DbType="Int")]
		public System.Nullable<int> Publisher_ID
		{
			get
			{
				return this._Publisher_ID;
			}
			set
			{
				if ((this._Publisher_ID != value))
				{
					if (this._Publisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPublisher_IDChanging(value);
					this.SendPropertyChanging();
					this._Publisher_ID = value;
					this.SendPropertyChanged("Publisher_ID");
					this.OnPublisher_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Book_Writter", Storage="_Book_Writters", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Book_Writter> Book_Writters
		{
			get
			{
				return this._Book_Writters;
			}
			set
			{
				this._Book_Writters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Cart_Detail", Storage="_Cart_Details", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Cart_Detail> Cart_Details
		{
			get
			{
				return this._Cart_Details;
			}
			set
			{
				this._Cart_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Comment", Storage="_Comments", ThisKey="Product_ID", OtherKey="Product_ID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="Category_ID", OtherKey="Category_ID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Category_ID = value.Category_ID;
					}
					else
					{
						this._Category_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provider_Product", Storage="_Provider", ThisKey="Providers_ID", OtherKey="Providers_ID", IsForeignKey=true)]
		public Provider Provider
		{
			get
			{
				return this._Provider.Entity;
			}
			set
			{
				Provider previousValue = this._Provider.Entity;
				if (((previousValue != value) 
							|| (this._Provider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provider.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Provider.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Providers_ID = value.Providers_ID;
					}
					else
					{
						this._Providers_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Provider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publisher_Product", Storage="_Publisher", ThisKey="Publisher_ID", OtherKey="Publisher_ID", IsForeignKey=true)]
		public Publisher Publisher
		{
			get
			{
				return this._Publisher.Entity;
			}
			set
			{
				Publisher previousValue = this._Publisher.Entity;
				if (((previousValue != value) 
							|| (this._Publisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publisher.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Publisher.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Publisher_ID = value.Publisher_ID;
					}
					else
					{
						this._Publisher_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Publisher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product", Storage="_Unit", ThisKey="Unit_ID", OtherKey="Unit_ID", IsForeignKey=true)]
		public Unit Unit
		{
			get
			{
				return this._Unit.Entity;
			}
			set
			{
				Unit previousValue = this._Unit.Entity;
				if (((previousValue != value) 
							|| (this._Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Unit.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Unit_ID = value.Unit_ID;
					}
					else
					{
						this._Unit_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Book_Writters(Book_Writter entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Book_Writters(Book_Writter entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Cart_Details(Cart_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Cart_Details(Cart_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Providers")]
	public partial class Provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Providers_ID;
		
		private string _Providers_Name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProviders_IDChanging(int value);
    partial void OnProviders_IDChanged();
    partial void OnProviders_NameChanging(string value);
    partial void OnProviders_NameChanged();
    #endregion
		
		public Provider()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Providers_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Providers_ID
		{
			get
			{
				return this._Providers_ID;
			}
			set
			{
				if ((this._Providers_ID != value))
				{
					this.OnProviders_IDChanging(value);
					this.SendPropertyChanging();
					this._Providers_ID = value;
					this.SendPropertyChanged("Providers_ID");
					this.OnProviders_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Providers_Name", DbType="NVarChar(50)")]
		public string Providers_Name
		{
			get
			{
				return this._Providers_Name;
			}
			set
			{
				if ((this._Providers_Name != value))
				{
					this.OnProviders_NameChanging(value);
					this.SendPropertyChanging();
					this._Providers_Name = value;
					this.SendPropertyChanged("Providers_Name");
					this.OnProviders_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provider_Product", Storage="_Products", ThisKey="Providers_ID", OtherKey="Providers_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Provider = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Provider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Publisher")]
	public partial class Publisher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Publisher_ID;
		
		private string _Publisher_Name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublisher_IDChanging(int value);
    partial void OnPublisher_IDChanged();
    partial void OnPublisher_NameChanging(string value);
    partial void OnPublisher_NameChanged();
    #endregion
		
		public Publisher()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Publisher_ID
		{
			get
			{
				return this._Publisher_ID;
			}
			set
			{
				if ((this._Publisher_ID != value))
				{
					this.OnPublisher_IDChanging(value);
					this.SendPropertyChanging();
					this._Publisher_ID = value;
					this.SendPropertyChanged("Publisher_ID");
					this.OnPublisher_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher_Name", DbType="NVarChar(50)")]
		public string Publisher_Name
		{
			get
			{
				return this._Publisher_Name;
			}
			set
			{
				if ((this._Publisher_Name != value))
				{
					this.OnPublisher_NameChanging(value);
					this.SendPropertyChanging();
					this._Publisher_Name = value;
					this.SendPropertyChanged("Publisher_Name");
					this.OnPublisher_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publisher_Product", Storage="_Products", ThisKey="Publisher_ID", OtherKey="Publisher_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Publisher = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Publisher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Unit_ID;
		
		private string _Unit_Name;
		
		private System.Nullable<bool> _Unit_State;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnit_IDChanging(int value);
    partial void OnUnit_IDChanged();
    partial void OnUnit_NameChanging(string value);
    partial void OnUnit_NameChanged();
    partial void OnUnit_StateChanging(System.Nullable<bool> value);
    partial void OnUnit_StateChanged();
    #endregion
		
		public Unit()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Unit_ID
		{
			get
			{
				return this._Unit_ID;
			}
			set
			{
				if ((this._Unit_ID != value))
				{
					this.OnUnit_IDChanging(value);
					this.SendPropertyChanging();
					this._Unit_ID = value;
					this.SendPropertyChanged("Unit_ID");
					this.OnUnit_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Name", DbType="NVarChar(50)")]
		public string Unit_Name
		{
			get
			{
				return this._Unit_Name;
			}
			set
			{
				if ((this._Unit_Name != value))
				{
					this.OnUnit_NameChanging(value);
					this.SendPropertyChanging();
					this._Unit_Name = value;
					this.SendPropertyChanged("Unit_Name");
					this.OnUnit_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_State", DbType="Bit")]
		public System.Nullable<bool> Unit_State
		{
			get
			{
				return this._Unit_State;
			}
			set
			{
				if ((this._Unit_State != value))
				{
					this.OnUnit_StateChanging(value);
					this.SendPropertyChanging();
					this._Unit_State = value;
					this.SendPropertyChanged("Unit_State");
					this.OnUnit_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Product", Storage="_Products", ThisKey="Unit_ID", OtherKey="Unit_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Unit = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Users_ID;
		
		private string _Users_Name;
		
		private string _User_Phone;
		
		private string _User_Email;
		
		private System.Nullable<bool> _User_Sex;
		
		private System.Nullable<System.DateTime> _User_Birthday;
		
		private System.Nullable<bool> _User_State;
		
		private string _User_AccountName;
		
		private string _User_AccountPassword;
		
		private System.Nullable<bool> _User_Admin;
		
		private EntitySet<Cart> _Carts;
		
		private EntitySet<Comment> _Comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsers_IDChanging(int value);
    partial void OnUsers_IDChanged();
    partial void OnUsers_NameChanging(string value);
    partial void OnUsers_NameChanged();
    partial void OnUser_PhoneChanging(string value);
    partial void OnUser_PhoneChanged();
    partial void OnUser_EmailChanging(string value);
    partial void OnUser_EmailChanged();
    partial void OnUser_SexChanging(System.Nullable<bool> value);
    partial void OnUser_SexChanged();
    partial void OnUser_BirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnUser_BirthdayChanged();
    partial void OnUser_StateChanging(System.Nullable<bool> value);
    partial void OnUser_StateChanged();
    partial void OnUser_AccountNameChanging(string value);
    partial void OnUser_AccountNameChanged();
    partial void OnUser_AccountPasswordChanging(string value);
    partial void OnUser_AccountPasswordChanged();
    partial void OnUser_AdminChanging(System.Nullable<bool> value);
    partial void OnUser_AdminChanged();
    #endregion
		
		public User()
		{
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Users_ID
		{
			get
			{
				return this._Users_ID;
			}
			set
			{
				if ((this._Users_ID != value))
				{
					this.OnUsers_IDChanging(value);
					this.SendPropertyChanging();
					this._Users_ID = value;
					this.SendPropertyChanged("Users_ID");
					this.OnUsers_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users_Name", DbType="NVarChar(50)")]
		public string Users_Name
		{
			get
			{
				return this._Users_Name;
			}
			set
			{
				if ((this._Users_Name != value))
				{
					this.OnUsers_NameChanging(value);
					this.SendPropertyChanging();
					this._Users_Name = value;
					this.SendPropertyChanged("Users_Name");
					this.OnUsers_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Phone", DbType="VarChar(12)")]
		public string User_Phone
		{
			get
			{
				return this._User_Phone;
			}
			set
			{
				if ((this._User_Phone != value))
				{
					this.OnUser_PhoneChanging(value);
					this.SendPropertyChanging();
					this._User_Phone = value;
					this.SendPropertyChanged("User_Phone");
					this.OnUser_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Email", DbType="NVarChar(50)")]
		public string User_Email
		{
			get
			{
				return this._User_Email;
			}
			set
			{
				if ((this._User_Email != value))
				{
					this.OnUser_EmailChanging(value);
					this.SendPropertyChanging();
					this._User_Email = value;
					this.SendPropertyChanged("User_Email");
					this.OnUser_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Sex", DbType="Bit")]
		public System.Nullable<bool> User_Sex
		{
			get
			{
				return this._User_Sex;
			}
			set
			{
				if ((this._User_Sex != value))
				{
					this.OnUser_SexChanging(value);
					this.SendPropertyChanging();
					this._User_Sex = value;
					this.SendPropertyChanged("User_Sex");
					this.OnUser_SexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> User_Birthday
		{
			get
			{
				return this._User_Birthday;
			}
			set
			{
				if ((this._User_Birthday != value))
				{
					this.OnUser_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._User_Birthday = value;
					this.SendPropertyChanged("User_Birthday");
					this.OnUser_BirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_State", DbType="Bit")]
		public System.Nullable<bool> User_State
		{
			get
			{
				return this._User_State;
			}
			set
			{
				if ((this._User_State != value))
				{
					this.OnUser_StateChanging(value);
					this.SendPropertyChanging();
					this._User_State = value;
					this.SendPropertyChanged("User_State");
					this.OnUser_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_AccountName", DbType="NVarChar(50)")]
		public string User_AccountName
		{
			get
			{
				return this._User_AccountName;
			}
			set
			{
				if ((this._User_AccountName != value))
				{
					this.OnUser_AccountNameChanging(value);
					this.SendPropertyChanging();
					this._User_AccountName = value;
					this.SendPropertyChanged("User_AccountName");
					this.OnUser_AccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_AccountPassword", DbType="NVarChar(50)")]
		public string User_AccountPassword
		{
			get
			{
				return this._User_AccountPassword;
			}
			set
			{
				if ((this._User_AccountPassword != value))
				{
					this.OnUser_AccountPasswordChanging(value);
					this.SendPropertyChanging();
					this._User_AccountPassword = value;
					this.SendPropertyChanged("User_AccountPassword");
					this.OnUser_AccountPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Admin", DbType="Bit")]
		public System.Nullable<bool> User_Admin
		{
			get
			{
				return this._User_Admin;
			}
			set
			{
				if ((this._User_Admin != value))
				{
					this.OnUser_AdminChanging(value);
					this.SendPropertyChanging();
					this._User_Admin = value;
					this.SendPropertyChanged("User_Admin");
					this.OnUser_AdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Cart", Storage="_Carts", ThisKey="Users_ID", OtherKey="Users_ID")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="Users_ID", OtherKey="Users_ID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
